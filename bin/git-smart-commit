#!/bin/bash

# Wrapper for "git commit":
# - recognizes paths and options
# - automatically adds --all if you didn't say what to commit
# - treats other arguments as commit message (no quoting necessary)
# - uses preexisting draft message if available
#
# Note that supplied message cannot contain filenames (unless you quote it).
# Example usage (with suggested git alias ci=smart-commit):
#
#     git ci This is super simple

CHANGE_SELECTOR=false   # does some argument specify what to commit?
COMMIT_OPTS="--verbose"   # show diff (double-check what you commit)
MSG_DRAFT_FILE="$(git rev-parse --git-dir)/COMMIT_MSGDRAFT"

# analyze and group arguments into options, paths and message
while [ $# -gt 0 ]; do
  arg="$1"; shift
  case "$arg" in
    # options that take arguments - get the argument, too
    -c|-C|--*message|-m|--fixup|--squash|-F|--file|--author|--date|-t|--template)
      COMMIT_OPTS="$COMMIT_OPTS $arg $1"; shift
      ;;
    # options mutually exclusive with --all
    -p|--patch|-o|--only|-i|--include|--interactive)
      COMMIT_OPTS="$COMMIT_OPTS $arg"
      CHANGE_SELECTOR=true
      ;;
    --)  # treat all remaining args as paths
      COMMIT_PATHS="-- $@"
      CHANGE_SELECTOR=true
      break
      ;;
    -?*)  # options without arguments
      COMMIT_OPTS="$COMMIT_OPTS $arg"
      ;;
    **)  # everything else >> commmit message
      COMMIT_MSG="$(echo $COMMIT_MSG $arg)"   # echo -> trim extra whtespace
      ;;
  esac
done

# are there staged changes or options mutually exclusive with --all?
if git diff --cached --quiet && ! $CHANGE_SELECTOR; then
  echo Assuming you want to commit all changes.
  COMMIT_OPTS="$COMMIT_OPTS --all"
fi

# Use file with draft message if available
# cat $MSG_DRAFT_FILE
if [ -e "$MSG_DRAFT_FILE" ]; then
  if [ -n "$COMMIT_MSG" ]; then
    echo $COMMIT_MSG >> "$MSG_DRAFT_FILE"
  fi
  COMMIT_OPTS="$COMMIT_OPTS --file $MSG_DRAFT_FILE --edit"
  # echo git commit $COMMIT_OPTS $COMMIT_PATHS
  git commit $COMMIT_OPTS $COMMIT_PATHS &&
  trash-put "$MSG_DRAFT_FILE"
else
  # message content must be quoted, but empty quotes would trigger error
  if [ -z "$COMMIT_MSG" ]; then
    git commit $COMMIT_OPTS $COMMIT_PATHS
  else
    git commit $COMMIT_OPTS --message "$COMMIT_MSG" $COMMIT_PATHS
  fi
fi
