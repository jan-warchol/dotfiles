#!/bin/bash

# exclude directories with lots of uninteresting stuff (some hidden, some not).
# Also filters out "permission denied" errors, as they are usually not helpful.

# find requires option for symlink handling to be at the beginning
if [ "$1" = "-H" -o "$1" = "-L" -o "$1" = "-P" ]; then
  FIND_SYMLINK_OPTS="$1"
  shift
fi

# separate paths from options
for arg in $@; do
  if [ -e $arg ]; then
    FIND_PATHS="$FIND_PATHS $arg"
    shift
  else
    break
  fi
done

# hacky support for -print0 option (doesn't work with complex expressions)
if [[ "$@" == *-print0* ]]; then
  PRINT_MTD="-print0"
  FIND_OPTS="${@//-print0}"
else
  PRINT_MTD="-print"
  FIND_OPTS="$@"
fi

blacklist="
  -fstype sysfs
  -o -fstype devfs
  -o -fstype devtmpfs
  -o -fstype proc

  -o -name .git
  -o -name .npm
  -o -name .cache
  -o -name snap
  -o -name node_modules
  -o -name python_modules
  -o -name site-packages
  -o -name dist-packages

  -o -path *venv*/lib
  -o -path */.local/share/Trash
  -o -path */.local/share/Steam
  -o -path */.vim/plugged
  -o -path */.vim/undo
  -o -path */.vscode/extensions
  -o -path */.config/google-chrome
  -o -path */.config/Microsoft*
  -o -path *usr/share/icons
  -o -path *usr/share/doc
  -o -path *usr/share/help
  -o -path *usr/share/locale
  -o -path *usr/src/linux*headers*
"

# often I'm most interested in the items that are direct children of the
# starting point, so show them first and then go deeper.
run_find() {
  # # first sorted toplevel directories
  # command find $FIND_SYMLINK_OPTS $FIND_PATHS -maxdepth 1 \
  #   \( $blacklist \) -prune -o -type d $FIND_OPTS $PRINT_MTD |
  #   LC_ALL=C sort
  #
  # # then sorted toplevel files
  # command find $FIND_SYMLINK_OPTS $FIND_PATHS -maxdepth 1 \
  #   \( $blacklist \) -prune -o $FIND_OPTS $PRINT_MTD |
  #   LC_ALL=C sort

  # finally everything else
  command find $FIND_SYMLINK_OPTS $FIND_PATHS \
    \( $blacklist \) -prune -o $FIND_OPTS $PRINT_MTD
}

# postprocessing
run_find 2> >(grep -v "Permission denied") |
  # deduplicate
  perl -n -l -e 'print . "\t$_" if !$seen{$_}++' |
  # remove . and .. - they are not interesting
  grep -v '^\.*$' |
  # remove leading ./ - less visual clutter
  sed 's|^\./||'
